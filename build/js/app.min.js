(function () {
'use strict';

// jshint esversion: 6
const MASHAPE_KEY = 'AyBmxPBKYUmshcuDOEgra2staJv9p1Tm8cgjsnsk5j9j5dONbK';

function getSearchResults(userQuery) {
  let ajaxSettings = {
    url: 'https://spoonacular-recipe-food-nutrition-v1.p.mashape.com/food/site/search',
    data: {
      query: userQuery
    },
    dataType: 'json',
    headers: {
      'X-Mashape-Key': MASHAPE_KEY,
      Accept: 'application/json'
    }
  };
  return $.ajax(ajaxSettings);
}

function getRecipeDetails(id) {
  let ajaxSettings = {
    url: 'https://spoonacular-recipe-food-nutrition-v1.p.mashape.com/recipes/'+id+'/information',
    data: {
      includeNutrition: false
    },
    dataType: 'json',
    headers: {
      'X-Mashape-Key': MASHAPE_KEY,
      Accept: 'application/json'
    }
  };
  return $.ajax(ajaxSettings);
}

// function getSearchResultsByIngredient(myIngredients, numResults=5) {
//   let ajaxSettings = {
//     url: 'https://spoonacular-recipe-food-nutrition-v1.p.mashape.com/recipes/findByIngredients',
//     data: {
//       fillIngredients: false,
//       ingredients: myIngredients,
//       limitLicense: false,
//       number: numResults,
//       ranking: 1
//     },
//     dataType: 'json',
//     headers: {
//       'X-Mashape-Key': MASHAPE_KEY,
//       Accept: 'application/json'
//     }
//   };
//   return $.ajax(ajaxSettings);
// }

// jshint esversion:6
const CLIENT_ID = 'myj4y8uy5mlsg9s';
const REDIRECT_URI$1 = 'http://localhost/spoon-n-drop/build/';
function OAuth(){
  let url = 'https://www.dropbox.com/oauth2/authorize?'+
  'response_type=token&'+
  'client_id='+CLIENT_ID+'&'+
  'redirect_uri='+REDIRECT_URI$1;
  window.location.replace(url);
}
/*GET and param urls used to avoid CORS pre-flight*/
function getMyRecipes(state) {
  let ajaxSettings = {
    url: 'https://content.dropboxapi.com/2/files/download',
    method: 'GET',
    dataType: 'json',
    data: {
      authorization: 'Bearer '+ window.sessionStorage.getItem('accessToken'),
      arg: JSON.stringify({path: '/questions.json'}),
      reject_cors_preflight: true
    }
  };
  return $.ajax(ajaxSettings);
}

function deleteFileHelper() {
  let ajaxSettings = {
    url: 'https://api.dropboxapi.com/2/files/delete',
    method: 'POST',
    dataType: 'json',
    contentType: 'application/json',
    data: JSON.stringify({path: '/burt2.json'}),
    headers : {
      Authorization: 'Bearer '+window.sessionStorage.getItem('accessToken')
    }
  };
  return $.ajax(ajaxSettings);
}

function postMyRecipes(state) {
  let jstring = JSON.stringify(state.myRecipes);
  let ajaxSettings = {
    url: 'https://content.dropboxapi.com/2/files/upload',
    method: 'POST',
    contentType: 'application/octet-stream',
    data: jstring,
    headers: {
      Authorization: 'Bearer '+window.sessionStorage.getItem('accessToken'),
      'Dropbox-API-Arg': JSON.stringify({path: '/burt2.json'})
    }
  };
  return $.ajax(ajaxSettings);
}

// jshint esversion:6

function renderPage() {
  $('main').find('.viewable').addClass('hide');
  $('main').find('.viewable').removeClass('viewable');
  $('#new-recipe-page').removeClass('hide');
  $('#new-recipe-page').addClass('viewable');
}

function appendList(element, keyPressed) {
  if(keyPressed==='Enter') {
    element.after('<li><input type="text" placeholder="new item"></li>');
  }
}

function addRecipe(state) {
  let title = $('#recipe-title').val();
  console.log(title);
  let time = $('#ready-in-mins').val();
  let ingredients = [];
  $('#ingredients').find('input').each(
    (index, element) => ingredients.push($(element).val())
  );
  // let ingredients = $('#ingredients').find('input').val();
  console.log(ingredients);
  let steps = [];
  $('#steps').find('input').each(
    (index, element) => steps.push($(element).val())
  );
  // let steps = $('#steps').find('input').val();
  console.log(steps);
  state.myRecipes.push({
    title: title,
    readyInMinutes: time,
    listofIngredients: ingredients,
    instructions: steps
  });
  console.log(state.myRecipes);
}

//jshint esversion: 6

const REDIRECT_URI = 'http://localhost/spoon-n-drop/build/';
function initAppState() {
  return {
    resultList: [],
    currentView: 'search',
    previousHtml: '',
    myRecipes: [],//list of recipe objs
    loggedIn: false,
    accessToken: ''
  };
}


function makeResultsList(resultObj, state) {
  let previewList = [];
  let recipeId = '';
  $.each(resultObj.Recipes, function(ind, obj) {
    recipeId = obj.link.split('-').pop();
    console.log(recipeId);
    previewList.push({
      title: obj.name,
      imgUrl: obj.image,
      id: recipeId
    });
  });
  state.resultList = previewList;
}

function renderResultsList(state){
  let previewHtml = '';
  $.each(state.resultList, function(ind, obj) {
    previewHtml += '<li data-recipeid="'+obj.id+'"><a>'+
    '<img src="'+obj.imgUrl+'" alt="'+obj.title+'">'+
    '<span>'+obj.title+'</span>'+
    '<form><input type="submit"></form>'+
    '</li></a>';
  });
  $('#search-results').html(previewHtml);
}

function simplifyRecipeDetails(recipeObj) {
  /*Refer to 'get-recipe-info-sample-response.json' for recipeObj's complete structure*/
  let ingredients = [];
  $.each(recipeObj.extendedIngredients, function(ind, obj) {
    ingredients.push({
      name: obj.name,
      amount: obj.amount + obj.unitLong
    });
  });
  let steps = [];
  $.each(recipeObj.analyzedInstructions[0].steps, function(ind, obj) {
    steps.push(obj.step);
  });
  return {
    title: recipeObj.title,
    time: recipeObj.readyInMinutes,
    listofIngredients: ingredients,
    instructions: steps
  };
}

function renderRecipeDetails(simpleRecipeObj, state) {
  state.previousHtml = $('main').html();
  let recipeInfoHtml ='<span><h1>'+
    simpleRecipeObj.title+'</h1>'+
    '<h2>'+simpleRecipeObj.time+'minutes</h2></span><ul>';
  $.each(simpleRecipeObj.listofIngredients, function(ind, obj) {
    recipeInfoHtml += '<li>'+obj.amount+obj.name+'</li>';
  });
  recipeInfoHtml += '</ul><ol>';
  $.each(simpleRecipeObj.instructions, function(ind,val) {
    recipeInfoHtml += '<li>'+val+'</li>';
  });
  recipeInfoHtml += '</ol>';
  $('main').html(recipeInfoHtml);
}


$(function main() {
  let appState = initAppState();
  let token = window.sessionStorage.getItem('accessToken');
  if(token !== 'undefined') {
    appState.loggedIn = true;
  }

  else {
    let redirectResponse = window.location.href.split('#')[1];
    if(typeof redirectResponse != 'undefined') {
      window.sessionStorage.setItem('accessToken', redirectResponse.split('&')[0].split('=')[1]);
      window.location.replace(REDIRECT_URI);
      appState.loggedIn = true;
    }
  }

  console.log(appState.loggedIn);
  $('#search-form').on('submit', function(event) {
    event.preventDefault();
    let query = $(this).find('#search-bar').val();

    let xhrPromise = getSearchResults(query);
    xhrPromise.done(function (data) {
      makeResultsList(data,appState);
      renderResultsList(appState);
    });
  });

  $('#search-results').on('click','li',function() {
    console.log($(this).data('recipeid'));

    let xhrPromise = getRecipeDetails($(this).data('recipeid'));
    xhrPromise.done(
      (data) => renderRecipeDetails(simplifyRecipeDetails(data), appState)
    );
  });

  $('#login').on('click', function() {
    if(!appState.loggedIn) {OAuth();}
  });

  $('#my-recipes').on('click', function() {
    if(appState.loggedIn) {
      let xhr = getMyRecipes(appState);
      xhr.then(
        function success(data) {
          appState.myRecipes = data;
          console.log(appState.myRecipes);
        },
        function error(jqxhr) {
          console.log(jqxhr.responseText);
        }
      );
    }
  });

  $('#search-button').on('click', function () {
    if(appState.loggedIn) {
      let xhr = postMyRecipes(appState);
      xhr.then(
        data => console.log('Success!'),
        jqxhr => console.log(jqxhr.responseText)
      );
    }
  });

  $('#create-recipe').on('click', () => renderPage() );
  $('.create-list').on('keypress', 'li',
  function (event) {
    appendList($(this), event.key);
  });
  $('#new-recipe-page').find('form').on('click', 'button', function(event) {
      event.preventDefault();
      addRecipe(appState);
      let xhr = deleteFileHelper();
      xhr.then(
        data => postMyRecipes(appState).then(
          data => console.log('Success'),
          jqxhr => console.log(jqxhr.responseText)
        ),
        jqxhr => console.log(jqxhr.responseText)
      );
    });
});

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLm1pbi5qcyIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3NjcmlwdHMvbW9kdWxlcy9zcG9vbmFjdWxhci5qcyIsIi4uLy4uL3NyYy9zY3JpcHRzL21vZHVsZXMvZHJvcGJveC5qcyIsIi4uLy4uL3NyYy9zY3JpcHRzL21vZHVsZXMvcGFnZXMtY3JlYXRlLmpzIiwiLi4vLi4vc3JjL3NjcmlwdHMvYXBwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGpzaGludCBlc3ZlcnNpb246IDZcbmNvbnN0IE1BU0hBUEVfS0VZID0gJ0F5Qm14UEJLWVVtc2hjdURPRWdyYTJzdGFKdjlwMVRtOGNnanNuc2s1ajlqNWRPTmJLJztcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFNlYXJjaFJlc3VsdHModXNlclF1ZXJ5KSB7XG4gIGxldCBhamF4U2V0dGluZ3MgPSB7XG4gICAgdXJsOiAnaHR0cHM6Ly9zcG9vbmFjdWxhci1yZWNpcGUtZm9vZC1udXRyaXRpb24tdjEucC5tYXNoYXBlLmNvbS9mb29kL3NpdGUvc2VhcmNoJyxcbiAgICBkYXRhOiB7XG4gICAgICBxdWVyeTogdXNlclF1ZXJ5XG4gICAgfSxcbiAgICBkYXRhVHlwZTogJ2pzb24nLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgICdYLU1hc2hhcGUtS2V5JzogTUFTSEFQRV9LRVksXG4gICAgICBBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuICQuYWpheChhamF4U2V0dGluZ3MpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmVjaXBlRGV0YWlscyhpZCkge1xuICBsZXQgYWpheFNldHRpbmdzID0ge1xuICAgIHVybDogJ2h0dHBzOi8vc3Bvb25hY3VsYXItcmVjaXBlLWZvb2QtbnV0cml0aW9uLXYxLnAubWFzaGFwZS5jb20vcmVjaXBlcy8nK2lkKycvaW5mb3JtYXRpb24nLFxuICAgIGRhdGE6IHtcbiAgICAgIGluY2x1ZGVOdXRyaXRpb246IGZhbHNlXG4gICAgfSxcbiAgICBkYXRhVHlwZTogJ2pzb24nLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgICdYLU1hc2hhcGUtS2V5JzogTUFTSEFQRV9LRVksXG4gICAgICBBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuICQuYWpheChhamF4U2V0dGluZ3MpO1xufVxuXG4vLyBmdW5jdGlvbiBnZXRTZWFyY2hSZXN1bHRzQnlJbmdyZWRpZW50KG15SW5ncmVkaWVudHMsIG51bVJlc3VsdHM9NSkge1xuLy8gICBsZXQgYWpheFNldHRpbmdzID0ge1xuLy8gICAgIHVybDogJ2h0dHBzOi8vc3Bvb25hY3VsYXItcmVjaXBlLWZvb2QtbnV0cml0aW9uLXYxLnAubWFzaGFwZS5jb20vcmVjaXBlcy9maW5kQnlJbmdyZWRpZW50cycsXG4vLyAgICAgZGF0YToge1xuLy8gICAgICAgZmlsbEluZ3JlZGllbnRzOiBmYWxzZSxcbi8vICAgICAgIGluZ3JlZGllbnRzOiBteUluZ3JlZGllbnRzLFxuLy8gICAgICAgbGltaXRMaWNlbnNlOiBmYWxzZSxcbi8vICAgICAgIG51bWJlcjogbnVtUmVzdWx0cyxcbi8vICAgICAgIHJhbmtpbmc6IDFcbi8vICAgICB9LFxuLy8gICAgIGRhdGFUeXBlOiAnanNvbicsXG4vLyAgICAgaGVhZGVyczoge1xuLy8gICAgICAgJ1gtTWFzaGFwZS1LZXknOiBNQVNIQVBFX0tFWSxcbi8vICAgICAgIEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nXG4vLyAgICAgfVxuLy8gICB9O1xuLy8gICByZXR1cm4gJC5hamF4KGFqYXhTZXR0aW5ncyk7XG4vLyB9XG4iLCIvLyBqc2hpbnQgZXN2ZXJzaW9uOjZcbmNvbnN0IENMSUVOVF9JRCA9ICdteWo0eTh1eTVtbHNnOXMnO1xuY29uc3QgUkVESVJFQ1RfVVJJID0gJ2h0dHA6Ly9sb2NhbGhvc3Qvc3Bvb24tbi1kcm9wL2J1aWxkLyc7XG5jb25zdCBTVE9SQUdFX1BBVEggPSAnL215LXJlY2lwZXMuanNvbic7XG5cbmV4cG9ydCBmdW5jdGlvbiBPQXV0aCgpe1xuICBsZXQgdXJsID0gJ2h0dHBzOi8vd3d3LmRyb3Bib3guY29tL29hdXRoMi9hdXRob3JpemU/JytcbiAgJ3Jlc3BvbnNlX3R5cGU9dG9rZW4mJytcbiAgJ2NsaWVudF9pZD0nK0NMSUVOVF9JRCsnJicrXG4gICdyZWRpcmVjdF91cmk9JytSRURJUkVDVF9VUkk7XG4gIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHVybCk7XG59XG4vKkdFVCBhbmQgcGFyYW0gdXJscyB1c2VkIHRvIGF2b2lkIENPUlMgcHJlLWZsaWdodCovXG5leHBvcnQgZnVuY3Rpb24gZ2V0TXlSZWNpcGVzKHN0YXRlKSB7XG4gIGxldCBhamF4U2V0dGluZ3MgPSB7XG4gICAgdXJsOiAnaHR0cHM6Ly9jb250ZW50LmRyb3Bib3hhcGkuY29tLzIvZmlsZXMvZG93bmxvYWQnLFxuICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgZGF0YVR5cGU6ICdqc29uJyxcbiAgICBkYXRhOiB7XG4gICAgICBhdXRob3JpemF0aW9uOiAnQmVhcmVyICcrIHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdhY2Nlc3NUb2tlbicpLFxuICAgICAgYXJnOiBKU09OLnN0cmluZ2lmeSh7cGF0aDogJy9xdWVzdGlvbnMuanNvbid9KSxcbiAgICAgIHJlamVjdF9jb3JzX3ByZWZsaWdodDogdHJ1ZVxuICAgIH1cbiAgfTtcbiAgcmV0dXJuICQuYWpheChhamF4U2V0dGluZ3MpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGVsZXRlRmlsZUhlbHBlcigpIHtcbiAgbGV0IGFqYXhTZXR0aW5ncyA9IHtcbiAgICB1cmw6ICdodHRwczovL2FwaS5kcm9wYm94YXBpLmNvbS8yL2ZpbGVzL2RlbGV0ZScsXG4gICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgZGF0YVR5cGU6ICdqc29uJyxcbiAgICBjb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KHtwYXRoOiAnL2J1cnQyLmpzb24nfSksXG4gICAgaGVhZGVycyA6IHtcbiAgICAgIEF1dGhvcml6YXRpb246ICdCZWFyZXIgJyt3aW5kb3cuc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnYWNjZXNzVG9rZW4nKVxuICAgIH1cbiAgfTtcbiAgcmV0dXJuICQuYWpheChhamF4U2V0dGluZ3MpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcG9zdE15UmVjaXBlcyhzdGF0ZSkge1xuICBsZXQganN0cmluZyA9IEpTT04uc3RyaW5naWZ5KHN0YXRlLm15UmVjaXBlcyk7XG4gIGxldCBhamF4U2V0dGluZ3MgPSB7XG4gICAgdXJsOiAnaHR0cHM6Ly9jb250ZW50LmRyb3Bib3hhcGkuY29tLzIvZmlsZXMvdXBsb2FkJyxcbiAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICBjb250ZW50VHlwZTogJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScsXG4gICAgZGF0YToganN0cmluZyxcbiAgICBoZWFkZXJzOiB7XG4gICAgICBBdXRob3JpemF0aW9uOiAnQmVhcmVyICcrd2luZG93LnNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ2FjY2Vzc1Rva2VuJyksXG4gICAgICAnRHJvcGJveC1BUEktQXJnJzogSlNPTi5zdHJpbmdpZnkoe3BhdGg6ICcvYnVydDIuanNvbid9KVxuICAgIH1cbiAgfTtcbiAgcmV0dXJuICQuYWpheChhamF4U2V0dGluZ3MpO1xufVxuIiwiLy8ganNoaW50IGVzdmVyc2lvbjo2XG5cbmV4cG9ydCBmdW5jdGlvbiByZW5kZXJQYWdlKCkge1xuICAkKCdtYWluJykuZmluZCgnLnZpZXdhYmxlJykuYWRkQ2xhc3MoJ2hpZGUnKTtcbiAgJCgnbWFpbicpLmZpbmQoJy52aWV3YWJsZScpLnJlbW92ZUNsYXNzKCd2aWV3YWJsZScpO1xuICAkKCcjbmV3LXJlY2lwZS1wYWdlJykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgJCgnI25ldy1yZWNpcGUtcGFnZScpLmFkZENsYXNzKCd2aWV3YWJsZScpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYXBwZW5kTGlzdChlbGVtZW50LCBrZXlQcmVzc2VkKSB7XG4gIGlmKGtleVByZXNzZWQ9PT0nRW50ZXInKSB7XG4gICAgZWxlbWVudC5hZnRlcignPGxpPjxpbnB1dCB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwibmV3IGl0ZW1cIj48L2xpPicpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRSZWNpcGUoc3RhdGUpIHtcbiAgbGV0IHRpdGxlID0gJCgnI3JlY2lwZS10aXRsZScpLnZhbCgpO1xuICBjb25zb2xlLmxvZyh0aXRsZSk7XG4gIGxldCB0aW1lID0gJCgnI3JlYWR5LWluLW1pbnMnKS52YWwoKTtcbiAgbGV0IGluZ3JlZGllbnRzID0gW107XG4gICQoJyNpbmdyZWRpZW50cycpLmZpbmQoJ2lucHV0JykuZWFjaChcbiAgICAoaW5kZXgsIGVsZW1lbnQpID0+IGluZ3JlZGllbnRzLnB1c2goJChlbGVtZW50KS52YWwoKSlcbiAgKTtcbiAgLy8gbGV0IGluZ3JlZGllbnRzID0gJCgnI2luZ3JlZGllbnRzJykuZmluZCgnaW5wdXQnKS52YWwoKTtcbiAgY29uc29sZS5sb2coaW5ncmVkaWVudHMpO1xuICBsZXQgc3RlcHMgPSBbXTtcbiAgJCgnI3N0ZXBzJykuZmluZCgnaW5wdXQnKS5lYWNoKFxuICAgIChpbmRleCwgZWxlbWVudCkgPT4gc3RlcHMucHVzaCgkKGVsZW1lbnQpLnZhbCgpKVxuICApO1xuICAvLyBsZXQgc3RlcHMgPSAkKCcjc3RlcHMnKS5maW5kKCdpbnB1dCcpLnZhbCgpO1xuICBjb25zb2xlLmxvZyhzdGVwcyk7XG4gIHN0YXRlLm15UmVjaXBlcy5wdXNoKHtcbiAgICB0aXRsZTogdGl0bGUsXG4gICAgcmVhZHlJbk1pbnV0ZXM6IHRpbWUsXG4gICAgbGlzdG9mSW5ncmVkaWVudHM6IGluZ3JlZGllbnRzLFxuICAgIGluc3RydWN0aW9uczogc3RlcHNcbiAgfSk7XG4gIGNvbnNvbGUubG9nKHN0YXRlLm15UmVjaXBlcyk7XG59XG4iLCIvL2pzaGludCBlc3ZlcnNpb246IDZcblxuaW1wb3J0ICogYXMgcmVjaXBlIGZyb20gJy4vbW9kdWxlcy9zcG9vbmFjdWxhcic7XG5pbXBvcnQgKiBhcyBkcm9wYm94IGZyb20gJy4vbW9kdWxlcy9kcm9wYm94JztcbmltcG9ydCAqIGFzIGNyZWF0ZSBmcm9tICcuL21vZHVsZXMvcGFnZXMtY3JlYXRlJztcblxuY29uc3QgUkVESVJFQ1RfVVJJID0gJ2h0dHA6Ly9sb2NhbGhvc3Qvc3Bvb24tbi1kcm9wL2J1aWxkLyc7XG5mdW5jdGlvbiBpbml0QXBwU3RhdGUoKSB7XG4gIHJldHVybiB7XG4gICAgcmVzdWx0TGlzdDogW10sXG4gICAgY3VycmVudFZpZXc6ICdzZWFyY2gnLFxuICAgIHByZXZpb3VzSHRtbDogJycsXG4gICAgbXlSZWNpcGVzOiBbXSwvL2xpc3Qgb2YgcmVjaXBlIG9ianNcbiAgICBsb2dnZWRJbjogZmFsc2UsXG4gICAgYWNjZXNzVG9rZW46ICcnXG4gIH07XG59XG5cblxuZnVuY3Rpb24gbWFrZVJlc3VsdHNMaXN0KHJlc3VsdE9iaiwgc3RhdGUpIHtcbiAgbGV0IHByZXZpZXdMaXN0ID0gW107XG4gIGxldCByZWNpcGVJZCA9ICcnO1xuICAkLmVhY2gocmVzdWx0T2JqLlJlY2lwZXMsIGZ1bmN0aW9uKGluZCwgb2JqKSB7XG4gICAgcmVjaXBlSWQgPSBvYmoubGluay5zcGxpdCgnLScpLnBvcCgpO1xuICAgIGNvbnNvbGUubG9nKHJlY2lwZUlkKTtcbiAgICBwcmV2aWV3TGlzdC5wdXNoKHtcbiAgICAgIHRpdGxlOiBvYmoubmFtZSxcbiAgICAgIGltZ1VybDogb2JqLmltYWdlLFxuICAgICAgaWQ6IHJlY2lwZUlkXG4gICAgfSk7XG4gIH0pO1xuICBzdGF0ZS5yZXN1bHRMaXN0ID0gcHJldmlld0xpc3Q7XG59XG5cbmZ1bmN0aW9uIHJlbmRlclJlc3VsdHNMaXN0KHN0YXRlKXtcbiAgbGV0IHByZXZpZXdIdG1sID0gJyc7XG4gICQuZWFjaChzdGF0ZS5yZXN1bHRMaXN0LCBmdW5jdGlvbihpbmQsIG9iaikge1xuICAgIHByZXZpZXdIdG1sICs9ICc8bGkgZGF0YS1yZWNpcGVpZD1cIicrb2JqLmlkKydcIj48YT4nK1xuICAgICc8aW1nIHNyYz1cIicrb2JqLmltZ1VybCsnXCIgYWx0PVwiJytvYmoudGl0bGUrJ1wiPicrXG4gICAgJzxzcGFuPicrb2JqLnRpdGxlKyc8L3NwYW4+JytcbiAgICAnPGZvcm0+PGlucHV0IHR5cGU9XCJzdWJtaXRcIj48L2Zvcm0+JytcbiAgICAnPC9saT48L2E+JztcbiAgfSk7XG4gICQoJyNzZWFyY2gtcmVzdWx0cycpLmh0bWwocHJldmlld0h0bWwpO1xufVxuXG5mdW5jdGlvbiBzaW1wbGlmeVJlY2lwZURldGFpbHMocmVjaXBlT2JqKSB7XG4gIC8qUmVmZXIgdG8gJ2dldC1yZWNpcGUtaW5mby1zYW1wbGUtcmVzcG9uc2UuanNvbicgZm9yIHJlY2lwZU9iaidzIGNvbXBsZXRlIHN0cnVjdHVyZSovXG4gIGxldCBpbmdyZWRpZW50cyA9IFtdO1xuICAkLmVhY2gocmVjaXBlT2JqLmV4dGVuZGVkSW5ncmVkaWVudHMsIGZ1bmN0aW9uKGluZCwgb2JqKSB7XG4gICAgaW5ncmVkaWVudHMucHVzaCh7XG4gICAgICBuYW1lOiBvYmoubmFtZSxcbiAgICAgIGFtb3VudDogb2JqLmFtb3VudCArIG9iai51bml0TG9uZ1xuICAgIH0pO1xuICB9KTtcbiAgbGV0IHN0ZXBzID0gW107XG4gICQuZWFjaChyZWNpcGVPYmouYW5hbHl6ZWRJbnN0cnVjdGlvbnNbMF0uc3RlcHMsIGZ1bmN0aW9uKGluZCwgb2JqKSB7XG4gICAgc3RlcHMucHVzaChvYmouc3RlcCk7XG4gIH0pO1xuICByZXR1cm4ge1xuICAgIHRpdGxlOiByZWNpcGVPYmoudGl0bGUsXG4gICAgdGltZTogcmVjaXBlT2JqLnJlYWR5SW5NaW51dGVzLFxuICAgIGxpc3RvZkluZ3JlZGllbnRzOiBpbmdyZWRpZW50cyxcbiAgICBpbnN0cnVjdGlvbnM6IHN0ZXBzXG4gIH07XG59XG5cbmZ1bmN0aW9uIHJlbmRlclJlY2lwZURldGFpbHMoc2ltcGxlUmVjaXBlT2JqLCBzdGF0ZSkge1xuICBzdGF0ZS5wcmV2aW91c0h0bWwgPSAkKCdtYWluJykuaHRtbCgpO1xuICBsZXQgcmVjaXBlSW5mb0h0bWwgPSc8c3Bhbj48aDE+JytcbiAgICBzaW1wbGVSZWNpcGVPYmoudGl0bGUrJzwvaDE+JytcbiAgICAnPGgyPicrc2ltcGxlUmVjaXBlT2JqLnRpbWUrJ21pbnV0ZXM8L2gyPjwvc3Bhbj48dWw+JztcbiAgJC5lYWNoKHNpbXBsZVJlY2lwZU9iai5saXN0b2ZJbmdyZWRpZW50cywgZnVuY3Rpb24oaW5kLCBvYmopIHtcbiAgICByZWNpcGVJbmZvSHRtbCArPSAnPGxpPicrb2JqLmFtb3VudCtvYmoubmFtZSsnPC9saT4nO1xuICB9KTtcbiAgcmVjaXBlSW5mb0h0bWwgKz0gJzwvdWw+PG9sPic7XG4gICQuZWFjaChzaW1wbGVSZWNpcGVPYmouaW5zdHJ1Y3Rpb25zLCBmdW5jdGlvbihpbmQsdmFsKSB7XG4gICAgcmVjaXBlSW5mb0h0bWwgKz0gJzxsaT4nK3ZhbCsnPC9saT4nO1xuICB9KTtcbiAgcmVjaXBlSW5mb0h0bWwgKz0gJzwvb2w+JztcbiAgJCgnbWFpbicpLmh0bWwocmVjaXBlSW5mb0h0bWwpO1xufVxuXG5cbiQoZnVuY3Rpb24gbWFpbigpIHtcbiAgbGV0IGFwcFN0YXRlID0gaW5pdEFwcFN0YXRlKCk7XG4gIGxldCB0b2tlbiA9IHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdhY2Nlc3NUb2tlbicpO1xuICBpZih0b2tlbiAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBhcHBTdGF0ZS5sb2dnZWRJbiA9IHRydWU7XG4gIH1cblxuICBlbHNlIHtcbiAgICBsZXQgcmVkaXJlY3RSZXNwb25zZSA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmLnNwbGl0KCcjJylbMV07XG4gICAgaWYodHlwZW9mIHJlZGlyZWN0UmVzcG9uc2UgIT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCdhY2Nlc3NUb2tlbicsIHJlZGlyZWN0UmVzcG9uc2Uuc3BsaXQoJyYnKVswXS5zcGxpdCgnPScpWzFdKTtcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKFJFRElSRUNUX1VSSSk7XG4gICAgICBhcHBTdGF0ZS5sb2dnZWRJbiA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgY29uc29sZS5sb2coYXBwU3RhdGUubG9nZ2VkSW4pO1xuICAkKCcjc2VhcmNoLWZvcm0nKS5vbignc3VibWl0JywgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGxldCBxdWVyeSA9ICQodGhpcykuZmluZCgnI3NlYXJjaC1iYXInKS52YWwoKTtcblxuICAgIGxldCB4aHJQcm9taXNlID0gcmVjaXBlLmdldFNlYXJjaFJlc3VsdHMocXVlcnkpO1xuICAgIHhoclByb21pc2UuZG9uZShmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgbWFrZVJlc3VsdHNMaXN0KGRhdGEsYXBwU3RhdGUpO1xuICAgICAgcmVuZGVyUmVzdWx0c0xpc3QoYXBwU3RhdGUpO1xuICAgIH0pO1xuICB9KTtcblxuICAkKCcjc2VhcmNoLXJlc3VsdHMnKS5vbignY2xpY2snLCdsaScsZnVuY3Rpb24oKSB7XG4gICAgY29uc29sZS5sb2coJCh0aGlzKS5kYXRhKCdyZWNpcGVpZCcpKTtcblxuICAgIGxldCB4aHJQcm9taXNlID0gcmVjaXBlLmdldFJlY2lwZURldGFpbHMoJCh0aGlzKS5kYXRhKCdyZWNpcGVpZCcpKTtcbiAgICB4aHJQcm9taXNlLmRvbmUoXG4gICAgICAoZGF0YSkgPT4gcmVuZGVyUmVjaXBlRGV0YWlscyhzaW1wbGlmeVJlY2lwZURldGFpbHMoZGF0YSksIGFwcFN0YXRlKVxuICAgICk7XG4gIH0pO1xuXG4gICQoJyNsb2dpbicpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgIGlmKCFhcHBTdGF0ZS5sb2dnZWRJbikge2Ryb3Bib3guT0F1dGgoKTt9XG4gIH0pO1xuXG4gICQoJyNteS1yZWNpcGVzJykub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgaWYoYXBwU3RhdGUubG9nZ2VkSW4pIHtcbiAgICAgIGxldCB4aHIgPSBkcm9wYm94LmdldE15UmVjaXBlcyhhcHBTdGF0ZSk7XG4gICAgICB4aHIudGhlbihcbiAgICAgICAgZnVuY3Rpb24gc3VjY2VzcyhkYXRhKSB7XG4gICAgICAgICAgYXBwU3RhdGUubXlSZWNpcGVzID0gZGF0YTtcbiAgICAgICAgICBjb25zb2xlLmxvZyhhcHBTdGF0ZS5teVJlY2lwZXMpO1xuICAgICAgICB9LFxuICAgICAgICBmdW5jdGlvbiBlcnJvcihqcXhocikge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGpxeGhyLnJlc3BvbnNlVGV4dCk7XG4gICAgICAgIH1cbiAgICAgICk7XG4gICAgfVxuICB9KTtcblxuICAkKCcjc2VhcmNoLWJ1dHRvbicpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICBpZihhcHBTdGF0ZS5sb2dnZWRJbikge1xuICAgICAgbGV0IHhociA9IGRyb3Bib3gucG9zdE15UmVjaXBlcyhhcHBTdGF0ZSk7XG4gICAgICB4aHIudGhlbihcbiAgICAgICAgZGF0YSA9PiBjb25zb2xlLmxvZygnU3VjY2VzcyEnKSxcbiAgICAgICAganF4aHIgPT4gY29uc29sZS5sb2coanF4aHIucmVzcG9uc2VUZXh0KVxuICAgICAgKTtcbiAgICB9XG4gIH0pO1xuXG4gICQoJyNjcmVhdGUtcmVjaXBlJykub24oJ2NsaWNrJywgKCkgPT4gY3JlYXRlLnJlbmRlclBhZ2UoKSApO1xuICAkKCcuY3JlYXRlLWxpc3QnKS5vbigna2V5cHJlc3MnLCAnbGknLFxuICBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICBjcmVhdGUuYXBwZW5kTGlzdCgkKHRoaXMpLCBldmVudC5rZXkpO1xuICB9KTtcbiAgJCgnI25ldy1yZWNpcGUtcGFnZScpLmZpbmQoJ2Zvcm0nKS5vbignY2xpY2snLCAnYnV0dG9uJywgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBjcmVhdGUuYWRkUmVjaXBlKGFwcFN0YXRlKTtcbiAgICAgIGxldCB4aHIgPSBkcm9wYm94LmRlbGV0ZUZpbGVIZWxwZXIoKTtcbiAgICAgIHhoci50aGVuKFxuICAgICAgICBkYXRhID0+IGRyb3Bib3gucG9zdE15UmVjaXBlcyhhcHBTdGF0ZSkudGhlbihcbiAgICAgICAgICBkYXRhID0+IGNvbnNvbGUubG9nKCdTdWNjZXNzJyksXG4gICAgICAgICAganF4aHIgPT4gY29uc29sZS5sb2coanF4aHIucmVzcG9uc2VUZXh0KVxuICAgICAgICApLFxuICAgICAgICBqcXhociA9PiBjb25zb2xlLmxvZyhqcXhoci5yZXNwb25zZVRleHQpXG4gICAgICApO1xuICAgIH0pO1xufSk7XG4iXSwibmFtZXMiOlsiUkVESVJFQ1RfVVJJIiwicmVjaXBlLmdldFNlYXJjaFJlc3VsdHMiLCJyZWNpcGUuZ2V0UmVjaXBlRGV0YWlscyIsImRyb3Bib3guT0F1dGgiLCJkcm9wYm94LmdldE15UmVjaXBlcyIsImRyb3Bib3gucG9zdE15UmVjaXBlcyIsImNyZWF0ZS5yZW5kZXJQYWdlIiwiY3JlYXRlLmFwcGVuZExpc3QiLCJjcmVhdGUuYWRkUmVjaXBlIiwiZHJvcGJveC5kZWxldGVGaWxlSGVscGVyIl0sIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUNBLE1BQU0sV0FBVyxHQUFHLG9EQUFvRCxDQUFDOztBQUV6RSxBQUFPLFNBQVMsZ0JBQWdCLENBQUMsU0FBUyxFQUFFO0VBQzFDLElBQUksWUFBWSxHQUFHO0lBQ2pCLEdBQUcsRUFBRSw2RUFBNkU7SUFDbEYsSUFBSSxFQUFFO01BQ0osS0FBSyxFQUFFLFNBQVM7S0FDakI7SUFDRCxRQUFRLEVBQUUsTUFBTTtJQUNoQixPQUFPLEVBQUU7TUFDUCxlQUFlLEVBQUUsV0FBVztNQUM1QixNQUFNLEVBQUUsa0JBQWtCO0tBQzNCO0dBQ0YsQ0FBQztFQUNGLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMs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
