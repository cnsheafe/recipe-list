(function () {
'use strict';

// jshint esversion: 6
const MASHAPE_KEY = 'AyBmxPBKYUmshcuDOEgra2staJv9p1Tm8cgjsnsk5j9j5dONbK';

function getSearchResults(userQuery) {
  let ajaxSettings = {
    url: 'https://spoonacular-recipe-food-nutrition-v1.p.mashape.com/food/site/search',
    data: {
      query: userQuery
    },
    dataType: 'json',
    headers: {
      'X-Mashape-Key': MASHAPE_KEY,
      Accept: 'application/json'
    }
  };
  return $.ajax(ajaxSettings);
}

function getRecipeDetails(id) {
  let ajaxSettings = {
    url: 'https://spoonacular-recipe-food-nutrition-v1.p.mashape.com/recipes/'+id+'/information',
    data: {
      includeNutrition: false
    },
    dataType: 'json',
    headers: {
      'X-Mashape-Key': MASHAPE_KEY,
      Accept: 'application/json'
    }
  };
  return $.ajax(ajaxSettings);
}

// function getSearchResultsByIngredient(myIngredients, numResults=5) {
//   let ajaxSettings = {
//     url: 'https://spoonacular-recipe-food-nutrition-v1.p.mashape.com/recipes/findByIngredients',
//     data: {
//       fillIngredients: false,
//       ingredients: myIngredients,
//       limitLicense: false,
//       number: numResults,
//       ranking: 1
//     },
//     dataType: 'json',
//     headers: {
//       'X-Mashape-Key': MASHAPE_KEY,
//       Accept: 'application/json'
//     }
//   };
//   return $.ajax(ajaxSettings);
// }

// jshint esversion:6
const CLIENT_ID = 'myj4y8uy5mlsg9s';
const REDIRECT_URI$1 = 'http://localhost/spoon-n-drop/build/';
const STORAGE_PATH = '/my-recipes.json';

function OAuth(){
  let url = 'https://www.dropbox.com/oauth2/authorize?'+
  'response_type=token&'+
  'client_id='+CLIENT_ID+'&'+
  'redirect_uri='+REDIRECT_URI$1;
  window.location.replace(url);
}
/*GET and param urls used to avoid CORS pre-flight*/
function getMyRecipes() {
  let ajaxSettings = {
    url: 'https://content.dropboxapi.com/2/files/download',
    method: 'GET',
    dataType: 'json',
    data: {
      authorization: 'Bearer '+ window.sessionStorage.getItem('accessToken'),
      arg: JSON.stringify({path: STORAGE_PATH}),
      reject_cors_preflight: true
    }
  };
  return $.ajax(ajaxSettings);
}

function deleteFileHelper() {
  let ajaxSettings = {
    url: 'https://api.dropboxapi.com/2/files/delete',
    method: 'POST',
    dataType: 'json',
    contentType: 'application/json',
    data: JSON.stringify({path: STORAGE_PATH}),
    headers : {
      Authorization: 'Bearer '+window.sessionStorage.getItem('accessToken')
    }
  };
  return $.ajax(ajaxSettings);
}

function postMyRecipes(state) {
  let ajaxSettings = {
    url: 'https://content.dropboxapi.com/2/files/upload',
    method: 'POST',
    contentType: 'application/octet-stream',
    data: JSON.stringify(state.myRecipes),
    headers: {
      Authorization: 'Bearer '+window.sessionStorage.getItem('accessToken'),
      'Dropbox-API-Arg': JSON.stringify({path: STORAGE_PATH})
    }
  };
  return $.ajax(ajaxSettings);
}

// jshint esversion:6

function renderPage() {
  $('main').find('.viewable').addClass('hide');
  $('main').find('.viewable').removeClass('viewable');
  $('#new-recipe-page').removeClass('hide');
  $('#new-recipe-page').addClass('viewable');
}

function renderNewListItem(element, keyPressed) {
  if(keyPressed === 'Enter') {
    element.after('<li><input type="text" placeholder="new item"></li>');
  }
}

function addRecipe(state) {
  let title = $('#recipe-title').val();
  let time = $('#ready-in-mins').val();
  let ingredients = [];
  $('#ingredients').find('input').each(
    (index, element) => ingredients.push($(element).val())
  );

  let steps = [];
  $('#steps').find('input').each(
    (index, element) => steps.push($(element).val())
  );

  state.myRecipes.push({
    title: title,
    readyInMinutes: time,
    listofIngredients: ingredients,
    instructions: steps
  });
}

// jshint esversion:6
function makeResultsList(resultObj, state) {
  let recipeId = '';
  $.each(resultObj.Recipes, function(ind, obj) {
    recipeId = obj.link.split('-').pop();

    state.resultList.push({
      title: obj.name,
      imgUrl: obj.image,
      id: recipeId
    });
  });
}

function renderResultsList(state){
  let previewHtml = '';
  $.each(state.resultList, function(ind, obj) {
    previewHtml += '<li data-recipeid="'+obj.id+'"><a>'+
    '<img src="'+obj.imgUrl+'" alt="'+obj.title+'">'+
    '<span>'+obj.title+'</span>'+
    '<form><input type="submit"></form>'+
    '</li></a>';
  });
  $('#search-results').html(previewHtml);
}

function simplifyRecipeDetails(recipeObj) {
  /*Refer to 'get-recipe-info-sample-response.json' for recipeObj's complete structure*/
  let ingredients = [];
  $.each(recipeObj.extendedIngredients, function(ind, obj) {
    ingredients.push({
      name: obj.name,
      amount: obj.amount + obj.unitLong
    });
  });
  let steps = [];
  if (typeof recipeObj.analyzedInstructions[0] !== 'undefined') {
    $.each(recipeObj.analyzedInstructions[0].steps, function(ind, obj) {
      steps.push(obj.step);
    });
  }
  return {
    title: recipeObj.title,
    time: recipeObj.readyInMinutes,
    listofIngredients: ingredients,
    instructions: steps
  };
}

function renderRecipeDetails(simpleRecipeObj, state) {
  state.previousHtml = $('main').html();
  let recipeInfoHtml ='<span><h1>'+
    simpleRecipeObj.title+'</h1>'+
    '<h2>'+simpleRecipeObj.time+'minutes</h2></span><ul>';
  $.each(simpleRecipeObj.listofIngredients, function(ind, obj) {
    recipeInfoHtml += '<li>'+obj.amount+obj.name+'</li>';
  });
  recipeInfoHtml += '</ul><ol>';
  $.each(simpleRecipeObj.instructions, function(ind,val) {
    recipeInfoHtml += '<li>'+val+'</li>';
  });
  recipeInfoHtml += '</ol>';
  $('main').html(recipeInfoHtml);
}

//jshint esversion: 6

const REDIRECT_URI = 'http://localhost/spoon-n-drop/build/';
function initAppState() {
  return {
    resultList: [],
    currentView: 'search',
    previousHtml: '',
    myRecipes: [], //list of recipe objs
    loggedIn: false,
    accessToken: ''
  };
}


$(function main() {
  let appState = initAppState();
  let token = window.sessionStorage.getItem('accessToken');

  if(token !== 'undefined' && token !== null) {
    appState.loggedIn = true;
  }

  else {
    let redirectResponse = window.location.href.split('#')[1];
    if(typeof redirectResponse != 'undefined') {
      window.sessionStorage.setItem('accessToken', redirectResponse.split('&')[0].split('=')[1]);
      window.location.replace(REDIRECT_URI);
      appState.loggedIn = true;
    }
  }

  $('#search-form').on('submit', function(event) {
    event.preventDefault();
    let query = $(this).find('#search-bar').val();
    getSearchResults(query).done(function (data) {
      makeResultsList(data,appState);
      renderResultsList(appState);
    });
  });

  $('#search-results').on('click','li',function() {
    let xhr = getRecipeDetails($(this).data('recipeid'));
    xhr.done(
      data => renderRecipeDetails(simplifyRecipeDetails(data), appState)
    );
  });

  $('#login').on('click', function() {
    if(!appState.loggedIn) {OAuth();}
  });

  $('#my-recipes').on('click', function() {
    if(appState.loggedIn) {
      getMyRecipes().then(
        data => appState.myRecipes = data,
        jqxhr => console.log(jqxhr.responseText)
      );
    }
  });

  $('#search-for-recipes').on('click', function () {
  });

  $('#create-recipe').on('click', () => renderPage() );
  $('.create-list').on('keypress', 'li', function (event) {
    renderNewListItem($(this), event.key);
  });
  $('#new-recipe-page').find('form').on('click', 'button', function(event) {
    event.preventDefault();
    addRecipe(appState);
    deleteFileHelper().always(
      data => postMyRecipes(appState).then(
        data => console.log('Success'),
        jqxhr => console.log(jqxhr.responseText)
      )
    );
  });
});

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
